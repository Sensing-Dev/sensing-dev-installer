name: Sensing dev installer Build, Test

on:
  push:
    branches:
      - '*'  # This will run the build and test jobs for every push on all branches

  pull_request:
    branches:
      - '*'  # This will run the build and test jobs for pull requests to all branches


jobs:
  aravis:
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        include:
        - version: 192
          arch: x86_64
          build_type_conan: Release
          build_type_meson: release
          aravis_version: "0.8.25"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clone and checkout specific tag of Aravis
      run: |
        git clone https://github.com/AravisProject/aravis.git installer/aravis
        cd installer/aravis
        git checkout "${{ matrix.aravis_version }}"

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
          python-version: "3.11.4"
          
    - name: Install Conan via pip
      run: python -m pip install conan

    - name: Disable Perl (remove from PATH)
      run: |
       Remove-Item -Path "C:\Strawberry" -Recurse
      #  tree C:\Strawberry /F

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    - name: Get dependencies using Conan
      working-directory: installer/aravis
      run: |
        conan profile detect
        conan install .. -b missing -pr ..\conan_profile -of .
    
    - name: Create ZIP from Conan installed files
      working-directory: installer/aravis
      run: |
        Compress-Archive -Path build\dependencies\* -DestinationPath Aravis-dependencies.zip

    - name: Upload Aravis-dependencies ZIP as artifact
      uses: actions/upload-artifact@v2
      with:
        name: Aravis-dependencies_zip
        path:  installer/aravis/Aravis-dependencies.zip

    - name: Build Aravis using meson 
      working-directory: installer/aravis
      run: |
        echo "::group::virtualenv"
        call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        .\build\generators\conanbuild.ps1
        .\build\generators\conanrun.ps1
        echo "::endgroup::"
        echo "::group::configure"
        meson setup --prefix ${{ github.workspace }}\install --buildtype ${{ matrix.build_type_meson }} --pkg-config-path ${{ github.workspace }}\installer\aravis\build\generators -Ddocumentation=disabled -Dgst-plugin=disabled -Dintrospection=enabled -Dusb=enabled -Dviewer=disabled -Dgv-n-buffers=1 . .\build
        echo "::endgroup::"
        echo "::group::compile"
        meson compile -C .\build -v
        echo "::endgroup::"
        echo "::group::install"
        meson install -C .\build
        echo "::endgroup::"

  
    - name: Create ZIP from installed files
      working-directory: installer/aravis
      run: |
        Compress-Archive -Path install\* -DestinationPath aravis_${{ matrix.aravis_version }}.zip

    - name: Upload Aravis ZIP as artifact
      uses: actions/upload-artifact@v2
      with:
        name:  aravis_${{ matrix.aravis_version }}_zip
        path:  installer/aravis/aravis_${{ matrix.aravis_version }}.zip

  aravis_conan:
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        include:
        - aravis_version: "0.8.25"

    steps:     

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
          python-version: "3.11.4"
          
    - name: Install Conan via pip
      run: python -m pip install conan

    - name: Build aravis using conan
      working-directory: installer/external/aravis
      run: |
        conan profile detect
        conan create . --version="${{ matrix.aravis_version }}" -b missing -o gst_plugin=False -o introspection=False -o usb=True -o gv_n_buffers=1 -o viewer=False -o shared=True

    - name: Create ZIP from Conan installed files
      working-directory: installer/external/aravis
      run: |
        Compress-Archive -Path build\dependencies\* -DestinationPath aravis${{ matrix.aravis_version }}.zip

    - name: Upload Aravis-dependencies ZIP as artifact
      uses: actions/upload-artifact@v2
      with:
        name: Aravis-dependencies_zip
        path:  installer/external/aravis/aravis${{ matrix.aravis_version }}.zip



  build:
    needs: aravis
    runs-on: windows-latest
    
    steps:     

      - name: Disable Perl (remove from PATH)
        run: echo "C:\Strawberry\perl" | Out-Null

      - name: Install WiX Toolset
        run: choco install wixtoolset -y

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create and enter build directory
        run: |
          cd installer
          mkdir build
          cd build

      - name: Run CMake
        working-directory: installer/build
        run: cmake -G "Visual Studio 17 2022" -A x64 ../

      - name: Build with CMake
        working-directory: installer/build
        run: cmake --build . --config Release

      - name: Package with CPack WIX
        working-directory: installer/build
        run: cpack -G "WIX"

      - name: Upload artifacts MSI
        uses: actions/upload-artifact@v2
        with:
          name: sensing-dev-installer-msi
          path: |
            installer/build/*.msi

      - name: Create package zip
        working-directory: installer/build
        run: cpack -G "ZIP"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sensing-dev-installer-zip
          path: |
            installer/build/*.zip
            
  test:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run tests
        run: |
          echo "TODO : Running tests..."

  





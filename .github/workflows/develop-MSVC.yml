name: Sensing dev installer Build, Test

on:
  push:
    branches:
      - 'feature/8-build-aravis-in-workflow'  # This will run the build and test jobs for every push on all branches

  # pull_request:
  #   branches:
  #     - '*'  # This will run the build and test jobs for pull requests to all branches



env:
  PYTHON_VERSION: '3.11.4'

jobs:
  setup-environment:
    runs-on: windows-2019
    outputs:
      workspace: ${{ github.workspace }}
    steps:
    - name: Define Environment Variables
      run: echo "::set-output name=workspace::${{ github.workspace }}"

  pygobject:
    needs: setup-environment
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        build_type_meson: [release]
        pygobject_version: ["3.42.0"]
        pycairo: ["disabled"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Clone and checkout specific tag of Pygobject
      run: |
        git clone "https://gitlab.gnome.org/GNOME/pygobject.git" installer/pygobject
        cd installer/pygobject
        git checkout "${{ matrix.pygobject_version }}"

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Conan via pip
      run: python -m pip install conan

    - name: Disable Perl (remove from PATH)
      run: |
        choco uninstall mingw strawberryperl
        Import-Module $env:ChocolateyInstall\helpers\chocolateyProfile.psm1

    - name: Get dependencies using Conan
      working-directory: installer/pygobject
      run: |
        conan profile detect
        conan install .. -b missing -pr ..\conan_profile -of .

    - name: Setup MSVC Developer Command Prompt
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64    

    - name: Build pygobject 
      working-directory: installer/pygobject
      run: |
          # $vsPath = & "C:\ProgramData\Chocolatey\bin\vswhere.exe -products * -requires Microsoft.Component.MSBuild -property installationPath -latest"
          # Push-Location
          # Set-Location "$vsPath\Common7\Tools"
          # & "./VsDevCmd.bat"
          # Pop-Location

          # $env:CC = "cl"
          # $env:CXX = "cl"
          .\build\generators\conanbuild.ps1
          .\build\generators\conanrun.ps1
          echo "::endgroup::"
          echo "::group::configure"
          meson setup `
          --prefix ${{ github.workspace }}\installer\pygobject\install `
          --buildtype ${{ matrix.build_type_meson }} `
          --pkg-config-path ${{ github.workspace }}\installer\pygobject\build\generators `
          -Dpycairo=${{ matrix.pycairo }} `
          -Dtests=false `
          . .\build
          $env:PKG_CONFIG_PATH=${{ github.workspace }}\installer\pygobject\build\dependencies;$env:PKG_CONFIG_PATH
          echo "::endgroup::"
          echo "::group::compile"
          meson compile -C .\build -v
          echo "::endgroup::"
          echo "::group::install"
          meson install -C .\build
          echo "::endgroup::"

  aravis:
    needs: pygobject
    runs-on: windows-2019
    

    strategy:
      fail-fast: false
      matrix:
        include:
        - build_type_meson: release
          aravis_version: "0.8.25"
          gst_plugin: "disabled"
          introspection: "enabled"
          usb: "enabled"
          viewer: "disabled "
          gv_n_buffers: 1

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Clone and checkout specific tag of Aravis
      run: |
        git clone https://github.com/AravisProject/aravis.git installer/aravis
        cd installer/aravis
        git checkout "${{ matrix.aravis_version }}"

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Conan via pip
      run: python -m pip install conan

    - name: Disable Perl (remove from PATH)
      run: |
       $gccPath = Get-Command gcc | Select-Object Source
       Remove-Item -Path "$gccPath" 
       Remove-Item -Path "C:\Strawberry" -Recurse

    - name: Setup MSVC Developer Command Prompt
      uses: TheMrMilchmann/setup-msvc-dev@v3
      with:
        arch: x64

    - name: Build Aravis using meson 
      working-directory: installer/aravis
      run: |
        echo "::group::virtualenv"
        # Start-Process -FilePath cmd.exe `
        #         -ArgumentList "/c call `
        # call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"``
        ..\pygobject\build\generators\conanbuild.ps1
        ..\pygobject\build\generators\conanrun.ps1
        echo "::endgroup::"
        echo "::group::configure"
        $env:PATH=${{ github.workspace }}\installer\pygobject\install\bin;$env:PATH
        $env:PKG_CONFIG_PATH=${{ github.workspace }}\installer\pygobject\install\lib\pkgconfig;$env:PKG_CONFIG_PATH

         meson setup `
          --prefix ${{ github.workspace }}\installer\aravis\install `
          --buildtype ${{ matrix.build_type_meson }} `
          --pkg-config-path ${{ github.workspace }}\installer\aravis\pygobject\generators;${{ github.workspace }}\installer\pygobject\install\lib\pkgconfig `
          -Ddocumentation=disabled `
          -Dgst-plugin=${{ matrix.gst_plugin }} `
          -Dintrospection=${{ matrix.introspection }} `
          -Dusb=${{ matrix.usb }} `
          -Dviewer=${{ matrix.viewer }} `
          -Dgv-n-buffers=${{ matrix.gv_n_buffers }} `
          . .\build
        echo "::endgroup::"
        echo "::group::compile"
        meson compile -C .\build -v
        echo "::endgroup::"
        echo "::group::install"
        meson install -C .\build
        echo "::endgroup::"

  
    - name: Create ZIP from installed files
      working-directory: installer/aravis
      run: |
        Compress-Archive -Path install\* -DestinationPath aravis_${{ matrix.aravis_version }}.zip

    - name: Upload Aravis ZIP as artifact
      uses: actions/upload-artifact@v2
      with:
        name:  aravis_${{ matrix.aravis_version }}_zip
        path:  installer/aravis/aravis_${{ matrix.aravis_version }}.zip



  build:
    needs: aravis
    runs-on: windows-latest
    
    steps:     

      - name: Disable Perl (remove from PATH)
        run: echo "C:\Strawberry\perl" | Out-Null

      - name: Install WiX Toolset
        run: choco install wixtoolset -y

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create and enter build directory
        run: |
          cd installer
          mkdir build
          cd build

      - name: Run CMake
        working-directory: installer/build
        run: cmake -G "Visual Studio 17 2022" -A x64 ../

      - name: Build with CMake
        working-directory: installer/build
        run: cmake --build . --config Release

      - name: Package with CPack WIX
        working-directory: installer/build
        run: cpack -G "WIX"

      - name: Upload artifacts MSI
        uses: actions/upload-artifact@v2
        with:
          name: sensing-dev-installer-msi
          path: |
            installer/build/*.msi

      - name: Create package zip
        working-directory: installer/build
        run: cpack -G "ZIP"

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sensing-dev-installer-zip
          path: |
            installer/build/*.zip
            
  test:
    needs: build
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Run tests
        working-directory: installer
        run: |
          .\tools\Env.ps1
          python .\tests\sensing_dev_test.py

  




